															Stack

Stack-
A stack is a linear data structure that follows the LIFO (Last In, First Out) principle.
This means that the last element added is the first one to be removed—just like a stack of plates.




Operations of Stack
Push → Insert an element at the top.

Pop → Remove the top element.

Peek → View the top element without removing it.

Display → Show all elements of the stack.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Push- Push means inserting an element at the top of the stack.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Let's understand with the example then we will move to the algorithm.

Stack: Empty
|    |
|    |
|    |
|    |
|____|
top = -1



Push(10)
Stack: 
| 10 | ← top
|____|

Push(20)
Stack:
| 20 | ← top
| 10 |
|____|

Push(30)
Stack:
| 30 | ← top
| 20 |
| 10 |
|____|

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Pseudocode:

Algorithm push(value){
	if(top == max - 1){
	print("Overflow");
	return;
	}
	else{
	top++;
	Stack[top] = value
	}
}






Algorithm of Push:

Algorithm Push(Stack, top, max, item){
	if(top == max - 1){
		print("Stack Overflow");	
	}

	else{
		top++;
		Stack[top] = item;
	}
}



Explanation:

Step 1: Checks if the stack is full (top == max-1 → Because array index starts from 0).

Step 2: If not full → Increase top by 1 and insert the item at Stack[top].

Stack Overflow: When there is no space left to insert.



